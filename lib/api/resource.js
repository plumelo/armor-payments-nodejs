// Generated by CoffeeScript 1.10.0
(function() {
  var Resource, request;

  request = require('request-promise');

  Resource = (function() {
    function Resource(host, authenticator, uriRoot) {
      this.host = host;
      this.authenticator = authenticator;
      this.uriRoot = uriRoot;
      this.client = request.defaults({
        baseUrl: this.host,
        headers: {
          'Accept': 'application/json'
        },
        resolveWithFullResponse: true
      });
    }

    Resource.prototype.resourceName = function() {
      return this.constructor.name.toLowerCase();
    };

    Resource.prototype.uri = function(objectId) {
      var base;
      if (objectId == null) {
        objectId = null;
      }
      base = this.uriRoot + "/" + (this.resourceName());
      if (objectId) {
        base += "/" + objectId;
      }
      return base;
    };

    Resource.prototype.request = function(method, params) {
      return this.client[method](params).then(function(response) {
        var ref;
        if ((ref = response.headers['content-type']) != null ? ref.match(/json/i) : void 0) {
          response.body = JSON.parse(response.body);
        }
        return response;
      });
    };

    Resource.prototype.all = function() {
      var headers;
      headers = this.authenticator.secureHeaders('get', this.uri());
      return this.request('get', {
        uri: this.uri(),
        headers: headers
      });
    };

    Resource.prototype.get = function(objectId) {
      var headers;
      headers = this.authenticator.secureHeaders('get', this.uri(objectId));
      return this.request('get', {
        uri: this.uri(objectId),
        headers: headers
      });
    };

    return Resource;

  })();

  module.exports = Resource;

}).call(this);
