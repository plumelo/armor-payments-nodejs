// Generated by CoffeeScript 1.10.0
(function() {
  var Disputes, Documents, Notes, OrderEvents, Orders, PaymentInstructions, Resource, Shipments,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Documents = require('./documents');

  Disputes = require('./disputes');

  Notes = require('./notes');

  OrderEvents = require('./orderevents');

  PaymentInstructions = require('./paymentinstructions');

  Resource = require('./resource');

  Shipments = require('./shipments');

  Orders = (function(superClass) {
    extend(Orders, superClass);

    function Orders() {
      return Orders.__super__.constructor.apply(this, arguments);
    }

    Orders.prototype.create = function(data) {
      var headers;
      headers = this.authenticator.secureHeaders('post', this.uri());
      return this.request('post', {
        uri: this.uri(),
        headers: headers,
        body: JSON.stringify(data)
      });
    };

    Orders.prototype.update = function(orderId, data) {
      var headers;
      headers = this.authenticator.secureHeaders('post', this.uri(orderId));
      return this.request('post', {
        uri: this.uri(orderId),
        headers: headers,
        body: JSON.stringify(data)
      });
    };

    Orders.prototype.documents = function(orderId) {
      return new Documents(this.host, this.authenticator, this.uri(orderId));
    };

    Orders.prototype.notes = function(orderId) {
      return new Notes(this.host, this.authenticator, this.uri(orderId));
    };

    Orders.prototype.disputes = function(orderId) {
      return new Disputes(this.host, this.authenticator, this.uri(orderId));
    };

    Orders.prototype.orderevents = function(orderId) {
      return new OrderEvents(this.host, this.authenticator, this.uri(orderId));
    };

    Orders.prototype.paymentinstructions = function(orderId) {
      return new PaymentInstructions(this.host, this.authenticator, this.uri(orderId));
    };

    Orders.prototype.shipments = function(orderId) {
      return new Shipments(this.host, this.authenticator, this.uri(orderId));
    };

    return Orders;

  })(Resource);

  module.exports = Orders;

}).call(this);
